{"version":3,"sources":["src/app/edit-doner-info/edit-doner-info.page.html","src/app/auth.service.ts","src/app/edit-doner-info/edit-doner-info-routing.module.ts","src/app/edit-doner-info/edit-doner-info.module.ts","src/app/edit-doner-info/edit-doner-info.page.scss","src/app/edit-doner-info/edit-doner-info.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title\\\">Edit Doner Info</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <form novalidate (ngSubmit)=\\\"signup(userData)\\\" [formGroup]=\\\"signupform\\\">\\n      <!-- name -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Name </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" formControlName=\\\"name\\\" [class.error1]=\\\"!signupform.controls.name.valid && signupform.controls.name.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('name').hasError('minlength') || signupform.get('name').hasError('maxlength') ||signupform.get('name').hasError('pattern') ||signupform.get('name').hasError('required') ) && signupform.get('name').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('required') && signupform.get('name').touched\\\">\\n          Please input your name\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('minlength') && signupform.get('name').touched\\\">\\n          Minimum 4 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('maxlength') && signupform.get('name').touched\\\">\\n          Maximum 30 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('pattern') && signupform.get('name').touched\\\">\\n          Just use alphabet character\\n        </div>\\n      </ion-item>\\n<!-- email -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" readonly [(ngModel)]=\\\"userData.email\\\" formControlName=\\\"email\\\" [class.error1]=\\\"!signupform.controls.email.valid && signupform.controls.email.dirty\\\" (click)=\\\"presentAlertConfirm('you can not change you email')\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('email').hasError('minlength') || signupform.get('email').hasError('pattern') ||signupform.get('email').hasError('required') ) && signupform.get('email').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('required') && signupform.get('email').touched\\\">\\n          Please input your email\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('pattern') && signupform.get('email').touched\\\">\\n          Email address invalid\\n        </div>\\n      </ion-item>\\n<!-- bloodgroupname -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">bloodGroupname </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.bloodGroupName\\\" formControlName=\\\"bloodGroupName\\\" [class.error1]=\\\"!signupform.controls.bloodGroupName.valid && signupform.controls.bloodGroupName.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('bloodGroupName').hasError('minlength') || signupform.get('bloodGroupName').hasError('maxlength') ||signupform.get('bloodGroupName').hasError('pattern') ||signupform.get('bloodGroupName').hasError('required') ) && signupform.get('bloodGroupName').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('required') && signupform.get('bloodGroupName').touched\\\">\\n          Please input blodgroup name\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('minlength') && signupform.get('bloodGroupName').touched\\\">\\n          Minimum 1 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('maxlength') && signupform.get('bloodGroupName').touched\\\">\\n          Maximum 30 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('pattern') && signupform.get('bloodGroupName').touched\\\">\\n          Just use alphabet character\\n        </div>\\n      </ion-item>\\n     \\n<!-- phonenumber -->\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">phoneNumber </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.phoneNumber\\\" formControlName=\\\"phoneNumber\\\" [class.error1]=\\\"!signupform.controls.phoneNumber.valid && signupform.controls.phoneNumber.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('phoneNumber').hasError('minlength') || signupform.get('phoneNumber').hasError('maxlength') ||signupform.get('phoneNumber').hasError('pattern') ||signupform.get('phoneNumber').hasError('required') ) && signupform.get('phoneNumber').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('required') && signupform.get('phoneNumber').touched\\\">\\n    Please input valid phone number\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('minlength') && signupform.get('bloodGroupName').touched\\\">\\n    Minimum 1 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('maxlength') && signupform.get('phoneNumber').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('pattern') && signupform.get('phoneNumber').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- countryname -->\\n\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">countryName </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.countryName\\\" formControlName=\\\"countryName\\\" [class.error1]=\\\"!signupform.controls.countryName.valid && signupform.controls.countryName.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('countryName').hasError('minlength') || signupform.get('countryName').hasError('maxlength') ||signupform.get('countryName').hasError('pattern') ||signupform.get('countryName').hasError('required') ) && signupform.get('countryName').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('required') && signupform.get('countryName').touched\\\">\\n    Please input country Name\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('minlength') && signupform.get('countryName').touched\\\">\\n    Minimum 1 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('maxlength') && signupform.get('countryName').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('pattern') && signupform.get('countryName').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- statename -->\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">stateName </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.stateName\\\" formControlName=\\\"stateName\\\" [class.error1]=\\\"!signupform.controls.stateName.valid && signupform.controls.stateName.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('stateName').hasError('minlength') || signupform.get('stateName').hasError('maxlength') ||signupform.get('stateName').hasError('pattern') ||signupform.get('stateName').hasError('required') ) && signupform.get('stateName').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('required') && signupform.get('stateName').touched\\\">\\n    Please input state name\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('minlength') && signupform.get('stateName').touched\\\">\\n    Minimum 4 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('maxlength') && signupform.get('stateName').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('pattern') && signupform.get('stateName').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- districtName -->\\n\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">districtname </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.districtname\\\" formControlName=\\\"districtname\\\" [class.error1]=\\\"!signupform.controls.districtname.valid && signupform.controls.districtname.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('districtname').hasError('minlength') || signupform.get('districtname').hasError('maxlength') ||signupform.get('districtname').hasError('pattern') ||signupform.get('districtname').hasError('required') ) && signupform.get('districtname').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('required') && signupform.get('districtname').touched\\\">\\n    Please input district name \\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('minlength') && signupform.get('districtname').touched\\\">\\n    Minimum 3 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('maxlength') && signupform.get('districtname').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('pattern') && signupform.get('districtname').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n<div class=\\\"button-inline\\\">\\n\\n  <ion-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"signupform.invalid\\\">SAVE</ion-button>\\n</div>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\\n \\n\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { AlertController } from \"@ionic/angular\";\nimport { ActivatedRoute } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  isLoading = false;\n  private dataSource = new BehaviorSubject<string>(\"\");\n  data = this.dataSource.asObservable();\n\n  private showuser = new BehaviorSubject<boolean>(false);\n  showUserData = this.showuser.asObservable();\n\n  url = \"http://192.168.1.103:5000\";\n\n  constructor(\n    private Http: HttpClient,\n    public loadingController: LoadingController,\n    public alertController: AlertController,\n    private route: ActivatedRoute\n    ) {}\n\n\n  async present() {\n    this.isLoading = true;\n    return await this.loadingController\n      .create({\n        message: \"please wait\",\n        // duration: 5000,\n      })\n      .then((a) => {\n        a.present().then(() => {\n          if (!this.isLoading) {\n            a.dismiss().then(() =>{});\n          }\n        });\n      });\n  }\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController\n      .dismiss()\n      .then(() =>{});\n  }\n  async presentAlertConfirm(msg) {\n    const alert = await this.alertController.create({\n      header: \"Confirm!\",\n      message: msg,\n      buttons: [\n        // {\n        //   text: 'Cancel',\n        //   role: 'cancel',\n        //   cssClass: 'secondary',\n        //   handler: (blah) => {\n        //     console.log('Confirm Cancel: blah');\n        //   }\n        // },\n        {\n          text: \"Okay\",\n          cssClass: \"secondary\",\n          handler: () => {\n          //  console.log(\"Confirm Okay\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n\n\n\n  updatedDataSelection(data) {\n    this.dataSource.next(data);\n  }\n  updatedUserData(data) {\n    this.showuser.next(data);\n  }\n\nuserLogin(data){\n  return this.Http.post(`${this.url}/user_group`,data);\n}\n\nuseredit(data){\n  return this.Http.post(`${this.url}/user_group/edit`,data);\n}\n\ndeleteuser(email){ \n  return this.Http.post(`${this.url}/user_group/remove`,{email});\n}\n\n  getBoodGroupData() {\n    return this.Http.get(`${this.url}/blood_Group`);\n  }\n  getcounty(bloodGroupName) {\n\n    return this.Http.post(`${this.url}/country_group`,{bloodGroupName});\n  }\n\n  getstate(countryName) {\n    return this.Http.get(\n      `${this.url}/state_group?${`countryName`}=${countryName}`\n    );\n  }\n\n  getdisrrict(distnamrName) {\n    return this.Http.get(\n      `${this.url}/district_group?${`statename`}=${distnamrName}`\n    );\n  }\n\n  user(distdata) {\n    delete distdata._id;\n    delete distdata.__v;\n    distdata[\"blodGroup\"] = this.data.source[\"_value\"];\n    return this.Http.post(`${this.url}/user_group/getuser`, distdata);\n  }\n\n  login(logindata) {\n    return this.Http.post(`${this.url}/email_data/login`, logindata);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditDonerInfoPage } from './edit-doner-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditDonerInfoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditDonerInfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditDonerInfoPageRoutingModule } from './edit-doner-info-routing.module';\n\nimport { EditDonerInfoPage } from './edit-doner-info.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditDonerInfoPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditDonerInfoPage]\n})\nexport class EditDonerInfoPageModule {}\n","export default \".error {\\n  color: #df3e3e;\\n  font-size: 11px;\\n}\\n\\n.error1 {\\n  color: #4b4b4b;\\n  border-bottom: 1px solid #ff0000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1kb25lci1pbmZvL0g6XFxkYXRhXFxpb25pY1xca2FtYWFsWmluZGFnaVxcYmxvZERvbmF0QXBwL3NyY1xcYXBwXFxlZGl0LWRvbmVyLWluZm9cXGVkaXQtZG9uZXItaW5mby5wYWdlLnNjc3MiLCJzcmMvYXBwL2VkaXQtZG9uZXItaW5mby9lZGl0LWRvbmVyLWluZm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFRTtFQUNFLGNBQUE7RUFDQSxnQ0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvZWRpdC1kb25lci1pbmZvL2VkaXQtZG9uZXItaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xyXG4gICAgY29sb3I6IHJnYigyMjMsIDYyLCA2Mik7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG5cclxuICAuZXJyb3IxIHtcclxuICAgIGNvbG9yOiByZ2IoNzUsIDc1LCA3NSk7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmMDAwMDtcclxuICB9IiwiLmVycm9yIHtcbiAgY29sb3I6ICNkZjNlM2U7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cblxuLmVycm9yMSB7XG4gIGNvbG9yOiAjNGI0YjRiO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmMDAwMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from \"../auth.service\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { AlertController } from \"@ionic/angular\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: 'app-edit-doner-info',\n  templateUrl: './edit-doner-info.page.html',\n  styleUrls: ['./edit-doner-info.page.scss'],\n})\nexport class EditDonerInfoPage implements OnInit {\n  isLoading = false;\n  userdata=[]\n  signupform: FormGroup;\n //\n //userdat={}\n userData = { \"name\": \"\", \"email\": \"\", \"bloodGroupName\": \"\", \"phoneNumber\": \"\" ,\"countryName\": \"\", \"stateName\": \"\", \"districtname\": \"\" };\n //userData = { \"name\": \"\", \"email\": \"\", \"bloodGroupName\": \"\", \"phoneNumber\": \"\" ,\"countryName\": \"\", \"stateName\": \"\", \"districtname\": \"\" };\n data=[]\n  constructor(\n    private route: ActivatedRoute,\n    public service: AuthService,\n    private router: Router,\n    public loadingController: LoadingController,\n    public alertController: AlertController\n  ) {\n  this.datafromHome();\n\n\n   }\n   async present() {\n    this.isLoading = true;\n    return await this.loadingController\n      .create({\n        message: \"please wait\",\n        // duration: 5000,\n      })\n      .then((a) => {\n        a.present().then(() => {\n         \n          if (!this.isLoading) {\n            a.dismiss().then(() => console.log(\"abort presenting\"));\n          }\n        });\n      });\n  }\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController\n      .dismiss()\n      .then(() => console.log(\"dismissed\"));\n  }\n  async presentAlertConfirm(msg) {\n    const alert = await this.alertController.create({\n      header: \"Confirm!\",\n      message: msg,\n      buttons: [\n        {\n          text: \"Okay\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Okay\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\nasync datafromHome(){\n  this.route.params.subscribe(params => {\n    this.data =JSON.parse(params['data'])\n});}\n\n  ngOnInit() {\n    this.userData.name=this.data[0].userName\n    this.userData.email=this.data[0].email\n    this.userData.bloodGroupName=this.data[0].bloodGroupName\n    this.userData.phoneNumber=this.data[0].phoneNumber\n    this.userData.countryName=this.data[0].countryName\n    this.userData.stateName=this.data[0].stateName\n    this.userData.districtname=this.data[0].stateName\n\n\n\n    let EMAILPATTERN = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.signupform = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(30)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(EMAILPATTERN)]),\n      bloodGroupName: new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z0-9!@#$&()\\\\-`.+,/\\\"]*$'), Validators.minLength(1), Validators.maxLength(10)]),\n      phoneNumber: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]),\n      countryName: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n      stateName: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n      districtname: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n    });\n  }\n\n  signup(userData){\n    userData['_id']=this.data[0]._id;\n    this.present()\n    console.log(userData,\"userData userData\")\n    this.service.useredit(userData).subscribe((data) => {\n      console.log(data,\"data\")\n      if(data['statusCode']==200 && data['result']){\n        this.dismiss()\n        this.userdata=[]\n        this.userdata.push(data['result']) \n        this.service.updatedUserData(true)\n        this.router.navigate([\n          \"/home\",\n          JSON.stringify(this.userdata),\n        ]);\n      }\n    },error=>{\n      this.dismiss()\n      console.log(error)\n      return this.presentAlertConfirm(error['message']);\n    });\n\n  }\n\n \n}\n"],"sourceRoot":"webpack:///","file":"edit-doner-info-edit-doner-info-module-es5.js"}
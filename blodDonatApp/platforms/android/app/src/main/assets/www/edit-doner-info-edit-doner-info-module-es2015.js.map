{"version":3,"sources":["./src/app/edit-doner-info/edit-doner-info.page.html","./src/app/auth.service.ts","./src/app/edit-doner-info/edit-doner-info-routing.module.ts","./src/app/edit-doner-info/edit-doner-info.module.ts","./src/app/edit-doner-info/edit-doner-info.page.scss","./src/app/edit-doner-info/edit-doner-info.page.ts"],"names":[],"mappings":"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","file":"edit-doner-info-edit-doner-info-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title\\\">Edit Doner Info</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <form novalidate (ngSubmit)=\\\"signup(userData)\\\" [formGroup]=\\\"signupform\\\">\\n      <!-- name -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Name </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" formControlName=\\\"name\\\" [class.error1]=\\\"!signupform.controls.name.valid && signupform.controls.name.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('name').hasError('minlength') || signupform.get('name').hasError('maxlength') ||signupform.get('name').hasError('pattern') ||signupform.get('name').hasError('required') ) && signupform.get('name').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('required') && signupform.get('name').touched\\\">\\n          Please input your name\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('minlength') && signupform.get('name').touched\\\">\\n          Minimum 4 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('maxlength') && signupform.get('name').touched\\\">\\n          Maximum 30 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('name').hasError('pattern') && signupform.get('name').touched\\\">\\n          Just use alphabet character\\n        </div>\\n      </ion-item>\\n<!-- email -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" readonly [(ngModel)]=\\\"userData.email\\\" formControlName=\\\"email\\\" [class.error1]=\\\"!signupform.controls.email.valid && signupform.controls.email.dirty\\\" (click)=\\\"presentAlertConfirm('you can not change you email')\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('email').hasError('minlength') || signupform.get('email').hasError('pattern') ||signupform.get('email').hasError('required') ) && signupform.get('email').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('required') && signupform.get('email').touched\\\">\\n          Please input your email\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('email').hasError('pattern') && signupform.get('email').touched\\\">\\n          Email address invalid\\n        </div>\\n      </ion-item>\\n<!-- bloodgroupname -->\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">bloodGroupname </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.bloodGroupName\\\" formControlName=\\\"bloodGroupName\\\" [class.error1]=\\\"!signupform.controls.bloodGroupName.valid && signupform.controls.bloodGroupName.dirty\\\"></ion-input>\\n      </ion-item>\\n      <ion-item no-lines *ngIf=\\\"( signupform.get('bloodGroupName').hasError('minlength') || signupform.get('bloodGroupName').hasError('maxlength') ||signupform.get('bloodGroupName').hasError('pattern') ||signupform.get('bloodGroupName').hasError('required') ) && signupform.get('bloodGroupName').touched\\\">\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('required') && signupform.get('bloodGroupName').touched\\\">\\n          Please input blodgroup name\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('minlength') && signupform.get('bloodGroupName').touched\\\">\\n          Minimum 1 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('maxlength') && signupform.get('bloodGroupName').touched\\\">\\n          Maximum 30 characters\\n        </div>\\n        <div class=\\\"error\\\" *ngIf=\\\"signupform.get('bloodGroupName').hasError('pattern') && signupform.get('bloodGroupName').touched\\\">\\n          Just use alphabet character\\n        </div>\\n      </ion-item>\\n     \\n<!-- phonenumber -->\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">phoneNumber </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.phoneNumber\\\" formControlName=\\\"phoneNumber\\\" [class.error1]=\\\"!signupform.controls.phoneNumber.valid && signupform.controls.phoneNumber.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('phoneNumber').hasError('minlength') || signupform.get('phoneNumber').hasError('maxlength') ||signupform.get('phoneNumber').hasError('pattern') ||signupform.get('phoneNumber').hasError('required') ) && signupform.get('phoneNumber').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('required') && signupform.get('phoneNumber').touched\\\">\\n    Please input valid phone number\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('minlength') && signupform.get('bloodGroupName').touched\\\">\\n    Minimum 1 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('maxlength') && signupform.get('phoneNumber').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('phoneNumber').hasError('pattern') && signupform.get('phoneNumber').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- countryname -->\\n\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">countryName </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.countryName\\\" formControlName=\\\"countryName\\\" [class.error1]=\\\"!signupform.controls.countryName.valid && signupform.controls.countryName.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('countryName').hasError('minlength') || signupform.get('countryName').hasError('maxlength') ||signupform.get('countryName').hasError('pattern') ||signupform.get('countryName').hasError('required') ) && signupform.get('countryName').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('required') && signupform.get('countryName').touched\\\">\\n    Please input country Name\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('minlength') && signupform.get('countryName').touched\\\">\\n    Minimum 1 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('maxlength') && signupform.get('countryName').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('countryName').hasError('pattern') && signupform.get('countryName').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- statename -->\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">stateName </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.stateName\\\" formControlName=\\\"stateName\\\" [class.error1]=\\\"!signupform.controls.stateName.valid && signupform.controls.stateName.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('stateName').hasError('minlength') || signupform.get('stateName').hasError('maxlength') ||signupform.get('stateName').hasError('pattern') ||signupform.get('stateName').hasError('required') ) && signupform.get('stateName').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('required') && signupform.get('stateName').touched\\\">\\n    Please input state name\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('minlength') && signupform.get('stateName').touched\\\">\\n    Minimum 4 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('maxlength') && signupform.get('stateName').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('stateName').hasError('pattern') && signupform.get('stateName').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n\\n<!-- districtName -->\\n\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">districtname </ion-label>\\n  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userData.districtname\\\" formControlName=\\\"districtname\\\" [class.error1]=\\\"!signupform.controls.districtname.valid && signupform.controls.districtname.dirty\\\"></ion-input>\\n</ion-item>\\n<ion-item no-lines *ngIf=\\\"( signupform.get('districtname').hasError('minlength') || signupform.get('districtname').hasError('maxlength') ||signupform.get('districtname').hasError('pattern') ||signupform.get('districtname').hasError('required') ) && signupform.get('districtname').touched\\\">\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('required') && signupform.get('districtname').touched\\\">\\n    Please input district name \\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('minlength') && signupform.get('districtname').touched\\\">\\n    Minimum 3 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('maxlength') && signupform.get('districtname').touched\\\">\\n    Maximum 30 characters\\n  </div>\\n  <div class=\\\"error\\\" *ngIf=\\\"signupform.get('districtname').hasError('pattern') && signupform.get('districtname').touched\\\">\\n    Just use alphabet character\\n  </div>\\n</ion-item>\\n<div class=\\\"button-inline\\\">\\n\\n  <ion-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"signupform.invalid\\\">SAVE</ion-button>\\n</div>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\\n \\n\"","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { AlertController } from \"@ionic/angular\";\nimport { ActivatedRoute } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  isLoading = false;\n  private dataSource = new BehaviorSubject<string>(\"\");\n  data = this.dataSource.asObservable();\n\n  private showuser = new BehaviorSubject<boolean>(false);\n  showUserData = this.showuser.asObservable();\n\n  url = \"http://192.168.1.103:5000\";\n\n  constructor(\n    private Http: HttpClient,\n    public loadingController: LoadingController,\n    public alertController: AlertController,\n    private route: ActivatedRoute\n    ) {}\n\n\n  async present() {\n    this.isLoading = true;\n    return await this.loadingController\n      .create({\n        message: \"please wait\",\n        // duration: 5000,\n      })\n      .then((a) => {\n        a.present().then(() => {\n          if (!this.isLoading) {\n            a.dismiss().then(() =>{});\n          }\n        });\n      });\n  }\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController\n      .dismiss()\n      .then(() =>{});\n  }\n  async presentAlertConfirm(msg) {\n    const alert = await this.alertController.create({\n      header: \"Confirm!\",\n      message: msg,\n      buttons: [\n        // {\n        //   text: 'Cancel',\n        //   role: 'cancel',\n        //   cssClass: 'secondary',\n        //   handler: (blah) => {\n        //     console.log('Confirm Cancel: blah');\n        //   }\n        // },\n        {\n          text: \"Okay\",\n          cssClass: \"secondary\",\n          handler: () => {\n          //  console.log(\"Confirm Okay\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n\n\n\n  updatedDataSelection(data) {\n    this.dataSource.next(data);\n  }\n  updatedUserData(data) {\n    this.showuser.next(data);\n  }\n\nuserLogin(data){\n  return this.Http.post(`${this.url}/user_group`,data);\n}\n\nuseredit(data){\n  return this.Http.post(`${this.url}/user_group/edit`,data);\n}\n\ndeleteuser(email){ \n  return this.Http.post(`${this.url}/user_group/remove`,{email});\n}\n\n  getBoodGroupData() {\n    return this.Http.get(`${this.url}/blood_Group`);\n  }\n  getcounty(bloodGroupName) {\n\n    return this.Http.post(`${this.url}/country_group`,{bloodGroupName});\n  }\n\n  getstate(countryName) {\n    return this.Http.get(\n      `${this.url}/state_group?${`countryName`}=${countryName}`\n    );\n  }\n\n  getdisrrict(distnamrName) {\n    return this.Http.get(\n      `${this.url}/district_group?${`statename`}=${distnamrName}`\n    );\n  }\n\n  user(distdata) {\n    delete distdata._id;\n    delete distdata.__v;\n    distdata[\"blodGroup\"] = this.data.source[\"_value\"];\n    return this.Http.post(`${this.url}/user_group/getuser`, distdata);\n  }\n\n  login(logindata) {\n    return this.Http.post(`${this.url}/email_data/login`, logindata);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditDonerInfoPage } from './edit-doner-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditDonerInfoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditDonerInfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditDonerInfoPageRoutingModule } from './edit-doner-info-routing.module';\n\nimport { EditDonerInfoPage } from './edit-doner-info.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditDonerInfoPageRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditDonerInfoPage]\n})\nexport class EditDonerInfoPageModule {}\n","export default \".error {\\n  color: #df3e3e;\\n  font-size: 11px;\\n}\\n\\n.error1 {\\n  color: #4b4b4b;\\n  border-bottom: 1px solid #ff0000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1kb25lci1pbmZvL0g6XFxkYXRhXFxpb25pY1xca2FtYWFsWmluZGFnaVxcYmxvZERvbmF0QXBwL3NyY1xcYXBwXFxlZGl0LWRvbmVyLWluZm9cXGVkaXQtZG9uZXItaW5mby5wYWdlLnNjc3MiLCJzcmMvYXBwL2VkaXQtZG9uZXItaW5mby9lZGl0LWRvbmVyLWluZm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFRTtFQUNFLGNBQUE7RUFDQSxnQ0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvZWRpdC1kb25lci1pbmZvL2VkaXQtZG9uZXItaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xyXG4gICAgY29sb3I6IHJnYigyMjMsIDYyLCA2Mik7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG5cclxuICAuZXJyb3IxIHtcclxuICAgIGNvbG9yOiByZ2IoNzUsIDc1LCA3NSk7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmMDAwMDtcclxuICB9IiwiLmVycm9yIHtcbiAgY29sb3I6ICNkZjNlM2U7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cblxuLmVycm9yMSB7XG4gIGNvbG9yOiAjNGI0YjRiO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmMDAwMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from \"../auth.service\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { AlertController } from \"@ionic/angular\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: 'app-edit-doner-info',\n  templateUrl: './edit-doner-info.page.html',\n  styleUrls: ['./edit-doner-info.page.scss'],\n})\nexport class EditDonerInfoPage implements OnInit {\n  isLoading = false;\n  userdata=[]\n  signupform: FormGroup;\n //\n //userdat={}\n userData = { \"name\": \"\", \"email\": \"\", \"bloodGroupName\": \"\", \"phoneNumber\": \"\" ,\"countryName\": \"\", \"stateName\": \"\", \"districtname\": \"\" };\n //userData = { \"name\": \"\", \"email\": \"\", \"bloodGroupName\": \"\", \"phoneNumber\": \"\" ,\"countryName\": \"\", \"stateName\": \"\", \"districtname\": \"\" };\n data=[]\n  constructor(\n    private route: ActivatedRoute,\n    public service: AuthService,\n    private router: Router,\n    public loadingController: LoadingController,\n    public alertController: AlertController\n  ) {\n  this.datafromHome();\n\n\n   }\n   async present() {\n    this.isLoading = true;\n    return await this.loadingController\n      .create({\n        message: \"please wait\",\n        // duration: 5000,\n      })\n      .then((a) => {\n        a.present().then(() => {\n         \n          if (!this.isLoading) {\n            a.dismiss().then(() => console.log(\"abort presenting\"));\n          }\n        });\n      });\n  }\n  async dismiss() {\n    this.isLoading = false;\n    return await this.loadingController\n      .dismiss()\n      .then(() => console.log(\"dismissed\"));\n  }\n  async presentAlertConfirm(msg) {\n    const alert = await this.alertController.create({\n      header: \"Confirm!\",\n      message: msg,\n      buttons: [\n        {\n          text: \"Okay\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Okay\");\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\nasync datafromHome(){\n  this.route.params.subscribe(params => {\n    this.data =JSON.parse(params['data'])\n});}\n\n  ngOnInit() {\n    this.userData.name=this.data[0].userName\n    this.userData.email=this.data[0].email\n    this.userData.bloodGroupName=this.data[0].bloodGroupName\n    this.userData.phoneNumber=this.data[0].phoneNumber\n    this.userData.countryName=this.data[0].countryName\n    this.userData.stateName=this.data[0].stateName\n    this.userData.districtname=this.data[0].stateName\n\n\n\n    let EMAILPATTERN = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.signupform = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(30)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(EMAILPATTERN)]),\n      bloodGroupName: new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z0-9!@#$&()\\\\-`.+,/\\\"]*$'), Validators.minLength(1), Validators.maxLength(10)]),\n      phoneNumber: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]),\n      countryName: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n      stateName: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n      districtname: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(10)]),\n    });\n  }\n\n  signup(userData){\n    userData['_id']=this.data[0]._id;\n    this.present()\n    console.log(userData,\"userData userData\")\n    this.service.useredit(userData).subscribe((data) => {\n      console.log(data,\"data\")\n      if(data['statusCode']==200 && data['result']){\n        this.dismiss()\n        this.userdata=[]\n        this.userdata.push(data['result']) \n        this.service.updatedUserData(true)\n        this.router.navigate([\n          \"/home\",\n          JSON.stringify(this.userdata),\n        ]);\n      }\n    },error=>{\n      this.dismiss()\n      console.log(error)\n      return this.presentAlertConfirm(error['message']);\n    });\n\n  }\n\n \n}\n"],"sourceRoot":"webpack:///"}